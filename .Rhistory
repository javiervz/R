## paper http://www.christianbentz.de/Papers/Bentz%20et%20al.%20(2016)%20Morphological%20complexity%20measures.pdf
## forma 1: usamos la función básica de R read.csv
datos1 <- read.csv('C:/Users/u_humanidades/Documents/R/datos/datos_bentz.csv')
head(datos1, 5)
## nombres de las columnas
columnas <- names(datos1)
columnas
## accedemos a una columna: usamos $, y obtenemos un vector
WALS <- datos1$WALS_NumChap
WALS
## Visualicemos un histograma de valores de TTR
hist(TTR)
## accedemos a una columna: usamos $, y obtenemos un vector
TTR <- datos1$C_TTR
TTR
## accedemos a una columna: usamos $, y obtenemos un vector
WALS <- datos1$WALS_NumChap
WALS
## Visualicemos un histograma de valores de TTR
hist(TTR)
hist(WALS)
## Visualicemos un histograma de valores de TTR
hist(TTR)
hist(WALS)
hist(WALS, add=T)
## Visualicemos un histograma de valores de TTR
hist(TTR)
hist(WALS, add=T)
## Visualicemos un histograma de valores de TTR
hist(TTR, color = 'red')
## Visualicemos un histograma de valores de TTR
hist(TTR, col = 'red')
hist(WALS, col = 'blue', add=T)
columnas
## filtremos por algunos datos
familia <- datos1$family
familia
## removemos los repetidos
familia <- unique(familia)
familia
## filtramos por una familia
datos_que <- datos1[datos1$family=='Quechuan',]
datos_que
## Definamos dataframes!
animal <- c("gato", "perro", "liebre", "huemul")
edad <- c(12, 15, 5, 3)
df <- data.frame(animal, edad)
print (df)
df
## Analicemos WALS_NumChap
WALS_num <- datos1$WALS_NumChap
hist(WALS_num)
columns
columnas
## Definamos un nuevo dataframe
# R base - Select columns from list
datos_filtrados <- datos1[,c("C_WALS","C_TTR")]
datos_filtrados
## ¿Cuál es la relación entre las variables?
plot(x=datos_filtrados$C_TTR, y=datos_filtrados$C_WALS)
## ¿Cuál es la relación entre las variables?
plot(x=datos_filtrados$C_TTR, y=datos_filtrados$C_WALS,
cex=2,
col="red",
xlab="value of X", ylab="value of Y",
main="A simple scatterplot")
## ¿Cuál es la relación entre las variables?
plot(x=datos_filtrados$C_TTR, y=datos_filtrados$C_WALS,
cex=2,
col="red",
xlab="TTR", ylab="C_WALS",
main="A simple scatterplot")
## ¿Cuál es la relación entre las variables?
plot(x=datos_filtrados$C_TTR, y=datos_filtrados$C_WALS,
cex=2,
col="red",
xlab="TTR", ylab="C_WALS",
main="Scatterplot")
## ¿Cuál es la relación entre las variables?
plot(x=datos_filtrados$C_TTR, y=datos_filtrados$C_WALS,
cex=1,
col="red",
xlab="TTR", ylab="C_WALS",
main="Scatterplot")
## filtramos
datos1 <- datos1[datos1$WALS_NumChap>25,]
## Definamos un nuevo dataframe
# R base - Select columns from list
datos_filtrados <- datos1[,c("C_WALS","C_TTR")]
datos_filtrados
## ¿Cuál es la relación entre las variables?
plot(x=datos_filtrados$C_TTR, y=datos_filtrados$C_WALS,
cex=1,
col="red",
xlab="TTR", ylab="C_WALS",
main="Scatterplot")
## ¿Cuál es la relación entre las variables?
plot(x=datos_filtrados$C_TTR, y=datos_filtrados$C_WALS,
cex=1,
col="red",
xlab="TTR", ylab="C_WALS",
main="Título")
columnas
## ¿Cómo cuantificamos las relaciones entre variables? Correlaciones!
res <- cor.test(datos_filtrados$C_TTR, datos_filtrados$C_WALS, method = "pearson")
res
columnas
## filtramos por una familia
datos_que <- datos1[datos1$family=='Quechuan',]
datos_que
## paper http://www.christianbentz.de/Papers/Bentz%20et%20al.%20(2016)%20Morphological%20complexity%20measures.pdf
## forma 1: usamos la función básica de R read.csv
datos1 <- read.csv('C:/Users/u_humanidades/Documents/R/datos/datos_bentz.csv')
head(datos1, 5)
## nombres de las columnas
columnas <- names(datos1)
columnas
## accedemos a una columna: usamos $, y obtenemos un vector
TTR <- datos1$C_TTR
TTR
## filtremos por algunos datos
familia <- datos1$family
## removemos los repetidos
familia <- unique(familia)
familia
## filtramos por una familia
datos_que <- datos1[datos1$family=='Quechuan',]
datos_que
## paper http://www.christianbentz.de/Papers/Bentz%20et%20al.%20(2016)%20Morphological%20complexity%20measures.pdf
## usamos la función básica de R read.csv
datos1 <- read.csv('C:/Users/u_humanidades/Documents/R/datos/datos_bentz.csv')
head(datos1, 5)
## nombres de las columnas
columnas <- names(datos1)
columnas
## descripción de todos los datos
summary(datos1)
## descripción de todos los datos
summary(datos_filtrados)
## dos histogramas
hist(datos_filtrados$C_WALS)
## ¿Cuál es la relación entre las variables?
plot(x=datos_filtrados$C_TTR, y=datos_filtrados$C_WALS,
cex=1,
col="red",
xlab="TTR", ylab="C_WALS",
main="Título")
## dos histogramas
hist(datos_filtrados$C_WALS)
hist(datos_filtrados$C_TTR)
## dos histogramas
hist(datos_filtrados$C_WALS)
hist(datos_filtrados$C_TTR, add = T)
## dos histogramas
hist(datos_filtrados$C_WALS)
hist(datos_filtrados$C_TTR, col = 'red', add = T)
## dos histogramas
library(plotly)
install.packages("plotly")
## dos histogramas
library(plotly)
fig <- plot_ly(x = ~datos_filtrados$C_WALS,
type = "histogram",
histnorm = "probability")
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = ~datos_filtrados$C_WALS)
fig <- fig %>% add_histogram(x = ~datos_filtrados$C_TTR)
fig <- fig %>% layout(barmode = "overlay")
fig
fig.update_layout(xaxis_title="valor")
fig
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = ~datos_filtrados$C_WALS)
fig <- fig %>% add_histogram(x = ~datos_filtrados$C_TTR)
fig <- fig %>% layout(barmode = "overlay")
fig.update_layout(xaxis_title="valor")
fig <- plot_ly(alpha = 0.6)
fig <- fig %>% add_histogram(x = ~datos_filtrados$C_WALS)
fig <- fig %>% add_histogram(x = ~datos_filtrados$C_TTR)
fig <- fig %>% layout(barmode = "overlay", title = 'TTR vs C_WALS', plot_bgcolor = "#e5ecf6", xaxis = list(title = 'valor'),
yaxis = list(title = 'freuencia'), legend = list(title=list(text='<b> Species of Iris </b>')))
fig
